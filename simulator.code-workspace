{
	// https://code.visualstudio.com/docs/editor/workspaces
	// https://code.visualstudio.com/docs/editor/multi-root-workspaces
	// https://code.visualstudio.com/docs/editor/variables-reference

	"folders": [
		{
			"path": "."
		},
	],
	// extensions.json section
	"extensions": {
		"recommendations": [
			"ms-vscode.cpptools",              // common C/C++ support
			"ms-vscode.cpptools-themes",       // general C/C++ theme
		],
		"unwantedRecommendations": [
		]
	},
	// settings.json section
	"settings": {
		"files.trimTrailingWhitespace": true,
		"files.insertFinalNewline": true,
		"files.trimFinalNewlines": true,
		"cmake.configureOnOpen": true,
		"files.associations": {
			"iostream": "cpp",
			"intrinsics.h": "c",
			"ostream": "cpp",
			"vector": "cpp",
			"lv_examples.h": "c"
		},
	},
	// tasks.json section
	"tasks": {
		"version": "2.0.0",
		"tasks": [
			{
				"label": "Build",
				"command": "cmake",
				"args": [
					"--build",
					"${workspaceFolder}/build",
					"--target",
					"demo"
				],
				"group": {
					"kind": "build",
					"isDefault": true
				},
				"problemMatcher": {
					"owner": "cpp",
					"fileLocation": ["relative", "${workspaceFolder}"],
					"pattern": {
						"regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
						"file": 1,
						"line": 2,
						"column": 3,
						"severity": 4,
						"message": 5
					}
				}
			},
		],
	},
	// launch.json section
	"launch": {
		"version": "0.2.0",
		"configurations": [
			{
				"name": "Debug LVGL demo with lldb",
				"type": "lldb",
				"request": "launch",
				"program": "${workspaceFolder}/build/demo",
				"args": [],
				"cwd": "${workspaceFolder}",
				"preLaunchTask": "Build",
				"stopAtEntry": false,
				"MIMode": "lldb"
			}
		]
	},
	// Setting
	"settings":{
		"search.exclude": {
			"**/node_modules": true,
			"**/bower_components": true,
			"**/*.code-search": true,
			"**/.vscode": true,
			"**/.cache": true
		},
		"files.associations": {
			"iostream": "cpp",
			"intrinsics.h": "c",
			"ostream": "cpp",
			"vector": "cpp"
		},
		"editor.formatOnPaste": false, // 关闭粘贴时触发格式化
		"editor.formatOnSave": false, // 关闭保存时触发格式化
		"editor.formatOnType": false, // 关闭输入时触发格式化
		// 关闭 C/C++ Extension Pack 插件的提示 防止其与clangd冲突
		"C_Cpp.errorSquiggles": "Disabled",
		"C_Cpp.intelliSenseEngineFallback": "Disabled",
		"C_Cpp.intelliSenseEngine": "Disabled",
		"C_Cpp.autocomplete": "Disabled", // So you don't get autocomplete from both extensions.
		// 指向clangd路径
		"clangd.arguments": [
			// compelie_commands.json 文件的目录位置
			"--compile-commands-dir=${custom.workspaceFolder}/build",
			// 让 Clangd 生成更详细的日志
			"--log=verbose",
			// 输出的 JSON 文件更美观
			"--pretty",
			// 全局补全
			"--all-scopes-completion",
			// 建议风格：打包(重载函数只会给出一个建议）相反可以设置为detailed
			"--completion-style=bundled",
			// 跨文件重命名变量
			"--cross-file-rename",
			// 允许补充头文件 iwyu, 不允许 never
			"--header-insertion=never",
			// 输入建议中，已包含头文件的项与还未包含头文件的项会以圆点加以区分
			"--header-insertion-decorators",
			// 在后台自动分析文件 基于 complie_commands
			"--background-index",
			// 启用 Clang-Tidy 以提供「静态检查」
			"--clang-tidy",
			// Clang-Tidy 静态检查的参数，指出按照哪些规则进行静态检查
			// 参数后部分的*表示通配符
			// 在参数前加入-，如-modernize-use-trailing-return-type，将会禁用某一规则
			"--clang-tidy-checks=cppcoreguidelines-*,performance-*,bugprone-*,portability-*,modernize-*,google-*",
			// 默认格式化风格: 谷歌开源项目代码指南
			"--fallback-style=file",
			// 同时开启的任务数量
			"-j=2",
			// pch优化的位置(memory 或 disk，选择memory会增加内存开销，但会提升性能)
			"--pch-storage=disk",
			// 启用这项时，补全函数时，将会给参数提供占位符
			// 我选择禁用
			"--function-arg-placeholders=false"
		],
	}
}
